version: '3'

services:
  nats-server:
    image: nats:latest

  client-gateway:
    build:
      context: ./client-gateway
      dockerfile: dockerfile.prod
    image: client-gateway-prod:latest
    ports:
      - ${CLIENT_GATEWAY_PORT}:${CLIENT_GATEWAY_PORT}
    environment:
      - PORT=${CLIENT_GATEWAY_PORT}
      - NATS_SERVERS=nats://nats-server:4222
      
  # products-ms:
  #   build: ./products-ms
  #   volumes:
  #     - ./products-ms/src:/usr/src/app/src
  #   command: npm run start:dev
  #   environment:
  #     - PORT=3001
  #     - NATS_SERVERS=nats://nats-server:4222
  #     - DATABASE_URL=file:./dev.db

  # orders-ms:
  #   build: ./orders-ms
  #   volumes:
  #     - ./orders-ms/src:/usr/src/app/src
  #   command: npm run start:dev
  #   environment:
  #     - PORT=3002
  #     - NATS_SERVERS=nats://nats-server:4222
  #     - DATABASE_URL=postgresql://postgres:123456@orders-db:5432/ordersdb?schema=public
  #   depends_on:
  #     orders-db:
  #       condition: service_healthy

  # orders-db:
  #   container_name: orders_database
  #   image: postgres:16.2
  #   restart: always
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=123456
  #     - POSTGRES_DB=ordersdb
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - ./orders-ms/postgres:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # payments-ms:
  #   container_name: payments_ms
  #   build: ./payments-ms
  #   volumes:
  #     - ./payments-ms/src:/usr/src/app/src
  #   command: npm run start:dev
  #   ports:
  #     - ${PAYMENTS_MS_PORT}:${PAYMENTS_MS_PORT}
  #   environment:
  #     - PORT=${PAYMENTS_MS_PORT}
  #     - NATS_SERVERS=nats://nats-server:4222
  #     - STRIPE_SECRET=${STRIPE_SECRET}
  #     - STRIPE_ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET}
  #     - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
  #     - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}

  # auth-ms:
  #   build: ./auth-ms
  #   volumes:
  #     - ./auth-ms/src:/usr/src/app/src
  #   command: npm run start:dev
  #   environment:
  #     - PORT=3004
  #     - NATS_SERVERS=nats://nats-server:4222
  #     - DATABASE_URL=mongodb://auth-db:27017/auth-db
  #     - JWT_SECRET=${AUTH_JWT_SECRET}
  #   depends_on:
  #     auth-db:
  #       condition: service_healthy

  # auth-db:
  #   image: mongo:5
  #   container_name: auth-db
  #   restart: always
  #   ports:
  #     - 27017:27017
  #   environment:
  #     MONGODB_DATABASE: auth-db
  #   command: >
  #     bash -c "
  #       mongod --replSet rs0 --bind_ip_all &
  #       sleep 10 &&
  #       mongosh --eval 'rs.initiate({_id: \"rs0\", members: [{_id: 0, host: \"auth-db:27017\"}]})' &&
  #       tail -f /dev/null
  #     "
  #   volumes:
  #     - ./auth-ms/mongo:/data/db
  #   healthcheck:
  #     test: ["CMD-SHELL", "mongosh --eval 'rs.status().ok'"]
  #     interval: 2m
  #     timeout: 30s
  #     retries: 3
  #     start_period: 30s
